{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GrifGridItem.js","components/GifGrid.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GrifGridItem","className","src","alt","GifGrid","setimages","useEffect","then","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAkBvC,OACI,mCACI,sBAAMC,SAXO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMd,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBU,SAACP,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,QAoBXK,YAAY,4B,+BC3BnBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCULO,EAVM,SAAC,GAAwB,IAAtBb,EAAqB,EAArBA,IAAKU,EAAgB,EAAhBA,MAAOD,EAAS,EAATA,GAEhC,OACI,sBAAcK,UAAU,OAAxB,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,MAFED,ICDLQ,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,EAETjB,mBAAS,IAFA,mBAE9B8B,EAF8B,KAEtBO,EAFsB,KAUrC,OALAC,qBAAU,WACNtB,EAAQC,GACPsB,KAAKF,KACP,CAACpB,IAGA,qCACI,6BAAKA,IACL,qBAAKgB,UAAU,YAAf,SACKH,EAAOJ,KAAI,SAACC,GACT,OACI,cAAC,EAAD,eAEQA,GADCA,EAAIC,aCQtBY,EAzBM,WAAO,IAAD,EAEaxC,mBAAS,CAAC,UAFvB,mBAEhByC,EAFgB,KAEJ1C,EAFI,KAKvB,OACI,qCACI,+CACA,cAAC,EAAD,CACIA,cAAeA,IAIX0C,EAAWf,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,UCbjCyB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.51e2e6fe.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats,]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Buscar imagenes...\"\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=12&api_key=IO48wIVK1qBZPz00VzuJwwGnDLMPU8Rm`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nconst GrifGridItem = ({ url, title, id }) => {\r\n\r\n    return (\r\n        <div key={id} className=\"card\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GrifGridItem\r\n","import React, { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport GrifGridItem from './GrifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const [images, setimages] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then(setimages);\r\n    }, [category])\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            <div className=\"card-grid\">\r\n                {images.map((img) => {\r\n                    return (\r\n                        <GrifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    )\r\n\r\n                })\r\n\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['memes']);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApps</h2>\r\n            <AddCategory\r\n                setCategories={setCategories}\r\n            />\r\n\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n\r\n                    ))\r\n                }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GifExpertApp from './components/GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}